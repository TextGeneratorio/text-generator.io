<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, minimal-ui">
    <link rel="shortcut icon" href="{{ static_url }}/img/favicon.ico" type="image/x-icon"/>
    {#    <link rel="apple-touch-icon" href="{{ static_url }}/img/bitbank-icon-iphone.png"/>#}
    {#    <link rel="apple-touch-icon" sizes="72x72" href="{{ static_url }}/img/bitbank-icon-ipad.png"/>#}
    {#    <link rel="apple-touch-icon" sizes="114x114" href="{{ static_url }}/img/bitbank-icon-iphone-retina.png"/>#}
    {#    <link rel="apple-touch-icon" sizes="144x144" href="{{ static_url }}/img/bitbank-icon-ipad-retina.png"/>#}
    {#    <link rel="icon" sizes="144x144" href="{{ static_url }}/img/bitbank-icon-ipad-retina.png"/>#}
    <meta http-equiv='content-language' content='en-gb'>

    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

    {% block headers %}
    {% endblock %}

    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="{{ static_url }}/css/material.cyan-pink.min.css"/>
    <link type="text/css" rel="stylesheet"
          href="https://cdn.firebase.com/libs/firebaseui/3.5.2/firebaseui.css"/>

    <link rel="stylesheet" href="{{ static_url }}/css/article.css">
    <link rel="stylesheet" href="{{ static_url }}/css/tables.css">


    {% block css %}
    {% endblock %}
    <script>
      window.fixtures = (function () {
        "use strict";
        var self = {{ fixtures|safe }};
        return self;
      })();
    </script>

    <script>(function (w, d, s, l, i) {
        w[l] = w[l] || [];
        w[l].push({
            'gtm.start':
                new Date().getTime(), event: 'gtm.js'
        });
        var f = d.getElementsByTagName(s)[0],
            j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : '';
        j.async = true;
        j.src =
            'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
        f.parentNode.insertBefore(j, f);
    })(window, document, 'script', 'dataLayer', 'GTM-MMLBMCK');</script>

    <script defer src="{{ static_url }}/libs/jquery-3.2.1.min.js"></script>


    <script defer src="https://www.gstatic.com/firebasejs/5.9.1/firebase.js"></script>

    <script>
        // Initialize Firebase
        var config = {
            apiKey: "AIzaSyBlt4HTUra_58fYju0I3mkVuNHcbTsmSJQ",
            authDomain: "questions-346919.firebaseapp.com",
            databaseURL: "https://questions-346919.firebaseio.com",
            projectId: "questions-346919",
            storageBucket: "questions-346919.appspot.com",
            messagingSenderId: "972112451973"
        };
        firebase.initializeApp(config);
        // User
        window.has_purchased = false;
        firebase.auth().onAuthStateChanged(function (user) {
            if (user) {
                // User is signed in.
                window.firebaseUser = user
                $('.header-login-signup').hide();
                $('#log-out').show();

                getUser(user, function (userData) {
                    if (user.is_subscribed) {
                        $('.header-subscribe').hide()
                    } else {
                        $('.header-subscribe').show()
                    }
                })
            } else {

                // User is signed out.

            }
        }, function (error) {
            console.log(error);
        });

        function signout() {
            firebase.auth().signOut().then(function () {
                // Sign-out successful.
            }).catch(function (error) {
                // An error happened.
            });
        }

        function newUser(user, token, callback) {
            "use strict";

            fetch("/api/create-user", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    'email': user.email,
                    'emailVerified': user.emailVerified,
                    'uid': user.uid,
                    'photoURL': user.photoURL,
                    'token': token
                }),
            })
                .then(response => {
                    if (!response.ok) {
                        // re login?
                        console.log('error saving user');
                        console.log(response);

                    }
                    return response.json()
                })
                .then(data => {
                    callback(data)
                }).catch(function (error) {
                callback(error)
            });
        }

        function getUser(user, callback) {
            "use strict";

            fetch("/api/get-user",
                {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        'uid': user.uid,
                        'email': user.email,
                    })
                })
            .then(response => {
                if (!response.ok) {
                    console.log(response); // todo err log
                    newUser(user, '', callback)
                }
                return response.json()
            })
            .then(data => {
                callback(data)
            }).catch(function (error) {
                console.log(error); // todo err log
                newUser(user, '', callback)
            });

        }
        function getUserWithStripe(user, callback) {
            "use strict";

            fetch("/api/get-user/stripe-usage",
                {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        'uid': user.uid,
                        'email': user.email,
                    })
                })
            .then(response => {
                if (!response.ok) {
                    console.log(response); // todo err log
                    newUser(user, '', callback)
                }
                return response.json()
            })
            .then(data => {
                callback(data)
            }).catch(function (error) {
                console.log(error); // todo err log

                newUser(user, '', callback)
            });

        }


    </script>
    <script src="https://cdn.firebase.com/libs/firebaseui/3.5.2/firebaseui.js"></script>


    {#    {% endif %}#}
    <script defer src="{{ static_url }}/js/material.min.js"></script>

    {#    <script src="{{ static_url }}/js/webutils.js"></script>#}
    {#    <script src="{{ static_url }}/js/templates/coins-table.js"></script>#}
    {#    <script defer src="{{ static_url }}/js/userauth.js"></script>#}

    {% block js %}
    {% endblock %}
</head>
<body lang="en">
<!-- Google Tag Manager (noscript) -->
<noscript>
    <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-MMLBMCK"
            height="0" width="0" style="display:none;visibility:hidden"></iframe>
</noscript>
<!-- End Google Tag Manager (noscript) -->

<div class="mdl-layout mdl-js-layout">
    {% include "/templates/shared/header.jinja2" %}
    <main class="mdl-layout__content">
        <div class="page-content">
            <!-- Your content goes here -->

            {% block mainbody %}
            {% endblock %}
        </div>
        {% if request.path != '/ai-text-editor' %}
            {% include "/templates/shared/footer.jinja2" with context %}
        {% endif %}
    </main>

</div>
</body>
</html>
