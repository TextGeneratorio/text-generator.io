<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, minimal-ui">
    <link rel="shortcut icon" href="{{ static_url }}/img/favicon.ico" type="image/x-icon"/>
    {#    <link rel="apple-touch-icon" href="{{ static_url }}/img/bitbank-icon-iphone.png"/>#}
    {#    <link rel="apple-touch-icon" sizes="72x72" href="{{ static_url }}/img/bitbank-icon-ipad.png"/>#}
    {#    <link rel="apple-touch-icon" sizes="114x114" href="{{ static_url }}/img/bitbank-icon-iphone-retina.png"/>#}
    {#    <link rel="apple-touch-icon" sizes="144x144" href="{{ static_url }}/img/bitbank-icon-ipad-retina.png"/>#}
    {#    <link rel="icon" sizes="144x144" href="{{ static_url }}/img/bitbank-icon-ipad-retina.png"/>#}
    <meta http-equiv='content-language' content='en-gb'>

    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">

    {% block headers %}
    {% endblock %}

    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="{{ static_url }}/css/material.cyan-pink.min.css"/>

    <link rel="stylesheet" href="{{ static_url }}/css/article.css">
    <link rel="stylesheet" href="{{ static_url }}/css/tables.css">
    <link rel="stylesheet" href="{{ static_url }}/css/checkout-dialog.css">
    <link rel="stylesheet" href="{{ static_url }}/css/subscription-modal.css">


    {% block css %}
    {% endblock %}
    <script>
      window.fixtures = (function () {
        "use strict";
        var self = {{ fixtures|safe }};
        return self;
      })();
      
      // Stripe configuration
      window.STRIPE_PUBLISHABLE_KEY = 'pk_live_51KjJGaDtz2XsjQRO1wdSdz8zS4bXzXq0tJ2m7lzJLdFpGhOdmGzX8fWwO9hm3vHdVVbfQc0XLJlT8l6KZGHJdUdl00zLUOHnMy';
    </script>


    <script src="{{ static_url }}/libs/jquery-3.2.1.min.js"></script>

    <script>
        // User authentication - new system
        window.has_purchased = false;
        
        // Check authentication status on page load
        checkAuthenticationStatus();
        
        async function checkAuthenticationStatus() {
            try {
                const response = await fetch('/api/current-user');
                if (response.ok) {
                    const userData = await response.json();
                    // User is signed in
                    window.currentUser = userData;
                    $('.header-login-signup').hide();
                    $('#log-out').show();
                    
                    if (userData.is_subscribed) {
                        $('.header-subscribe').hide()
                    } else {
                        $('.header-subscribe').show()
                    }
                } else {
                    // User is signed out
                    window.currentUser = null;
                    $('.header-login-signup').show();
                    $('#log-out').hide();
                    $('.header-subscribe').show();
                }
            } catch (error) {
                console.log('Auth check error:', error);
                window.currentUser = null;
            }
        }

        async function signout() {
            try {
                await fetch('/api/logout', { method: 'POST' });
                document.cookie = 'session_secret=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';
                window.location.href = '/';
            } catch (error) {
                console.error('Logout error:', error);
                // Force logout on client side even if server request fails
                document.cookie = 'session_secret=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';
                window.location.href = '/';
            }
        }

        function newUser(user, token, callback) {
            "use strict";

            fetch("/api/create-user", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    'email': user.email,
                    'emailVerified': user.emailVerified,
                    'uid': user.uid,
                    'photoURL': user.photoURL,
                    'token': token
                }),
            })
                .then(response => {
                    if (!response.ok) {
                        // re login?
                        console.log('error saving user');
                        console.log(response);

                    }
                    return response.json()
                })
                .then(data => {
                    callback(data)
                }).catch(function (error) {
                callback(error)
            });
        }

        function getUser(user, callback) {
            "use strict";

            fetch("/api/get-user",
                {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({})
                })
            .then(response => {
                console.log('getUser response:', response.status, response.statusText);
                if (!response.ok) {
                    console.log('getUser error:', response.status, response.statusText);
                    // Don't redirect immediately, let's see what the error is
                    return response.text().then(text => {
                        console.log('getUser error body:', text);
                        throw new Error('Request failed with status: ' + response.status + ', body: ' + text);
                    });
                }
                return response.json()
            })
            .then(data => {
                console.log('getUser success:', data);
                // Store user data in localStorage
                storeUserData(data);
                callback(data)
            }).catch(function (error) {
                console.log('getUser catch error:', error);
                // Don't redirect automatically - let's see what the error is first
                console.error('Error getting user data:', error.message);
            });

        }
        
        // Local storage utilities for user data
        function storeUserData(userData) {
            localStorage.setItem('userData', JSON.stringify(userData));
        }
        
        function getUserDataFromStorage() {
            const stored = localStorage.getItem('userData');
            return stored ? JSON.parse(stored) : null;
        }
        
        function clearUserDataFromStorage() {
            localStorage.removeItem('userData');
        }
        
        function getUserWithStripe(user, callback) {
            "use strict";

            fetch("/api/get-user/stripe-usage",
                {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({})
                })
            .then(response => {
                console.log('getUserWithStripe response:', response.status, response.statusText);
                if (!response.ok) {
                    console.log('getUserWithStripe error:', response.status, response.statusText);
                    // Don't redirect immediately, let's see what the error is
                    return response.text().then(text => {
                        console.log('getUserWithStripe error body:', text);
                        throw new Error('Request failed with status: ' + response.status + ', body: ' + text);
                    });
                }
                return response.json()
            })
            .then(data => {
                console.log('getUserWithStripe success:', data);
                // Store user data in localStorage
                storeUserData(data);
                callback(data)
            }).catch(function (error) {
                console.log('getUserWithStripe catch error:', error);
                // Don't redirect automatically - let's see what the error is first
                console.error('Error getting user data:', error.message);
            });

        }


    </script>
    <script defer src="{{ static_url }}/js/material.min.js"></script>
    <script src="https://js.stripe.com/v3/"></script>
    <script src="{{ static_url }}/js/checkout-dialog.js"></script>
    <script src="{{ static_url }}/js/subscription-modal.js"></script>

    {#    <script src="{{ static_url }}/js/webutils.js"></script>#}
    {#    <script src="{{ static_url }}/js/templates/coins-table.js"></script>#}
    {#    <script defer src="{{ static_url }}/js/userauth.js"></script>#}

    {% block js %}
    {% endblock %}
</head>
<body lang="en">
<!-- Google Tag Manager (noscript) -->
<noscript>
    <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-MMLBMCK"
            height="0" width="0" style="display:none;visibility:hidden"></iframe>
</noscript>
<!-- End Google Tag Manager (noscript) -->

<div class="mdl-layout mdl-js-layout">
    {% include "/templates/shared/header.jinja2" %}
    <main class="mdl-layout__content">
        <div class="page-content">
            <!-- Your content goes here -->

            {% block mainbody %}
            {% endblock %}
        </div>
        {% if request.path != '/ai-text-editor' %}
            {% include "/templates/shared/footer.jinja2" with context %}
        {% endif %}
    </main>

</div>
</body>
</html>
