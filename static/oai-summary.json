{
  "openapi": "3.0.2",
  "info": {
    "title": "Generate Text API",
    "description": "Generate text, control stopping criteria like max_length/max_sentences",
    "version": "1"
  },
  "paths": {
    "/api/v1/audio-file-extraction": {
      "post": {
        "summary": "Audio File Extraction",
        "operationId": "audio_file_extraction_api_v1_audio_file_extraction_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Secret",
              "type": "string"
            },
            "name": "secret",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_audio_file_extraction_api_v1_audio_file_extraction_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/audio-extraction": {
      "post": {
        "summary": "Audio Extraction",
        "operationId": "audio_extraction_api_v1_audio_extraction_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Secret",
              "type": "string"
            },
            "name": "secret",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudioParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feature-extraction": {
      "post": {
        "summary": "Feature Extraction",
        "operationId": "feature_extraction_api_v1_feature_extraction_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Secret",
              "type": "string"
            },
            "name": "secret",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeatureExtractParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/summarization": {
      "post": {
        "summary": "Feature Extraction",
        "operationId": "feature_extraction_api_v1_summarization_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Secret",
              "type": "string"
            },
            "name": "secret",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SummarizationParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/liveness_check": {
      "get": {
        "summary": "Liveness Check",
        "operationId": "liveness_check_liveness_check_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/generate_speech": {
      "post": {
        "summary": "Generate Speech",
        "operationId": "generate_speech_api_v1_generate_speech_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Secret",
              "type": "string"
            },
            "name": "secret",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateSpeechParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/generate": {
      "post": {
        "summary": "Generate Route",
        "operationId": "generate_route_api_v1_generate_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Secret",
              "type": "string"
            },
            "name": "secret",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/discord": {
      "post": {
        "summary": "Discord Route",
        "operationId": "discord_route_api_discord_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_discord_route_api_discord_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/generate-bulk": {
      "post": {
        "summary": "Generate Route Bulk",
        "operationId": "generate_route_bulk_api_v1_generate_bulk_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Secret",
              "type": "string"
            },
            "name": "secret",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Bulk Params",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GenerateParams"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/engines/{engine_name}/completions": {
      "post": {
        "summary": "Openai Route Named",
        "operationId": "openai_route_named_v1_engines__engine_name__completions_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Engine Name",
              "type": "string"
            },
            "name": "engine_name",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Secret",
              "type": "string"
            },
            "name": "secret",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenaiParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/completions": {
      "post": {
        "summary": "Openai Route",
        "operationId": "openai_route_v1_completions_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Secret",
              "type": "string"
            },
            "name": "secret",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenaiParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AudioParams": {
        "title": "AudioParams",
        "type": "object",
        "properties": {
          "audio_url": {
            "title": "Audio Url",
            "type": "string"
          },
          "translate_to_english": {
            "title": "Translate To English",
            "type": "boolean",
            "default": false
          },
          "output_filetype": {
            "title": "Output Filetype",
            "type": "string",
            "default": "txt"
          }
        }
      },
      "Body_audio_file_extraction_api_v1_audio_file_extraction_post": {
        "title": "Body_audio_file_extraction_api_v1_audio_file_extraction_post",
        "type": "object",
        "properties": {
          "audio_file": {
            "title": "Audio File",
            "type": "string",
            "description": "Audio file",
            "format": "binary"
          },
          "translate_to_english": {
            "title": "Translate To English",
            "type": "boolean",
            "default": false
          },
          "output_filetype": {
            "title": "Output Filetype",
            "type": "string",
            "default": "txt"
          }
        }
      },
      "Body_discord_route_api_discord_post": {
        "title": "Body_discord_route_api_discord_post",
        "required": [
          "type",
          "id",
          "data"
        ],
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "data": {
            "title": "Data",
            "type": "string"
          }
        }
      },
      "FeatureExtractParams": {
        "title": "FeatureExtractParams",
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "num_features": {
            "title": "Num Features",
            "type": "integer"
          }
        }
      },
      "GenerateParams": {
        "title": "GenerateParams",
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "number_of_results": {
            "title": "Number Of Results",
            "type": "integer",
            "default": 1
          },
          "max_length": {
            "title": "Max Length",
            "type": "integer",
            "default": 100
          },
          "min_length": {
            "title": "Min Length",
            "type": "integer",
            "default": 1
          },
          "max_sentences": {
            "title": "Max Sentences",
            "type": "integer"
          },
          "min_probability": {
            "title": "Min Probability",
            "type": "number",
            "default": 0.0
          },
          "stop_sequences": {
            "title": "Stop Sequences",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "top_p": {
            "title": "Top P",
            "type": "number",
            "default": 0.9
          },
          "top_k": {
            "title": "Top K",
            "type": "integer",
            "default": 40
          },
          "temperature": {
            "title": "Temperature",
            "type": "number",
            "default": 0.7
          },
          "seed": {
            "title": "Seed",
            "type": "integer"
          },
          "repetition_penalty": {
            "title": "Repetition Penalty",
            "type": "number",
            "default": 1.2
          }
        }
      },
      "GenerateSpeechParams": {
        "title": "GenerateSpeechParams",
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "speaker": {
            "title": "Speaker",
            "type": "string",
            "default": "Female 1"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "OpenaiParams": {
        "title": "OpenaiParams",
        "required": [
          "prompt"
        ],
        "type": "object",
        "properties": {
          "prompt": {
            "title": "Prompt",
            "type": "string"
          },
          "n": {
            "title": "N",
            "type": "integer",
            "default": 1
          },
          "best_of": {
            "title": "Best Of",
            "type": "integer",
            "default": 1
          },
          "echo": {
            "title": "Echo",
            "type": "boolean",
            "default": false
          },
          "max_tokens": {
            "title": "Max Tokens",
            "type": "integer",
            "default": 100
          },
          "min_length": {
            "title": "Min Length",
            "type": "integer",
            "default": 1
          },
          "max_sentences": {
            "title": "Max Sentences",
            "type": "integer"
          },
          "min_probability": {
            "title": "Min Probability",
            "type": "number",
            "default": 0.0
          },
          "stop": {
            "title": "Stop",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "stream": {
            "title": "Stream",
            "type": "boolean",
            "default": false
          },
          "suffix": {
            "title": "Suffix",
            "type": "string",
            "default": false
          },
          "top_p": {
            "title": "Top P",
            "type": "number",
            "default": 0.9
          },
          "top_k": {
            "title": "Top K",
            "type": "integer",
            "default": 40
          },
          "temperature": {
            "title": "Temperature",
            "type": "number",
            "default": 0.7
          },
          "repetition_penalty": {
            "title": "Repetition Penalty",
            "type": "number",
            "default": 1.2
          },
          "frequency_penalty": {
            "title": "Frequency Penalty",
            "type": "number",
            "default": 1.2
          },
          "presense_penalty": {
            "title": "Presense Penalty",
            "type": "number",
            "default": 1.2
          }
        }
      },
      "SummarizationParams": {
        "title": "SummarizationParams",
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "max_length": {
            "title": "Max Length",
            "type": "integer"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    }
  }
}
